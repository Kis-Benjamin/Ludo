version: '3'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: ludo_postgres:latest
    build: ./postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
  keycloak:
    image: ludo_keycloak:latest
    build: ./keycloak
    restart: unless-stopped
    volumes:
      - /srv/keycloak/data/import/:/opt/keycloak/data/import/:ro
    env_file: .env
    environment:
      KC_DB_URL: "jdbc:postgresql://postgres/${POSTGRES_DB}"
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: ${KC_PORT}
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
    command: "start --optimized"
    ports:
      - "${KC_PORT}:8443"
    healthcheck:
      test: [ "CMD", "curl", "--head", "-fsSk", "https://localhost:8443/health/ready" ]
      timeout: 45s
      interval: 10s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
  base:
    image: ludo_base:latest
    build: ./base
    profiles:
      - base
  builder:
    image: ludo_builder:latest
    build:
      context: .
      dockerfile: builder/Dockerfile
    profiles:
      - builder
  game_server:
    image: ludo_game_server:latest
    build: ./game-server
    restart: on-failure
    env_file: .env
    environment:
      SPRING_APPLICATION_JSON:
        '{
          "server.port" : "${SB_PORT}",
          "spring.datasource.url" : "jdbc:postgresql://postgres/${POSTGRES_DB}",
          "spring.datasource.username" : "${POSTGRES_USER}",
          "spring.datasource.password" : "${POSTGRES_PASSWORD}",
          "spring.security.oauth2.resourceserver.jwt.jwk-set-uri" : "https://keycloak:8443/realms/${KC_REALM}/protocol/openid-connect/certs"
        }'
    ports:
      - "${SB_PORT}:${SB_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
